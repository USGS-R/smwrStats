\documentclass{article}
\parskip 3pt
\parindent 30pt
\leftskip=-0.5in
\rightskip=-0.5in
%\VignetteIndexEntry{RecordExtension}
%\VignetteDepends{USGSwsStats}
%\VignetteDepends{dataRetrieval}

\begin{document}
\SweaveOpts{concordance=TRUE}
\raggedright
\parindent 30pt

\title{Streamflow Record Extension Example}

\author{Dave Lorenz}

\maketitle

This example demonstrates the \texttt{move.2} and related functions in the \texttt{USGSwsStats} package. The example retrieves data from NWISweb using functions in the \texttt{dataRetrieval} package. The Data are from the North Fork Yellow Bank River near Odessa, Minn. (USGS station identifier 05292704) and the Yellow Bank River near Odessa, Minn. (USGS station identifier 05293000).

<<echo=TRUE>>=
# Load the USGSwsStats and USGSwsData packages
library(USGSwsStats)
library(dataRetrieval)
# Get the datasets and rename columns 
NFYB <- readNWISdv("05292704", parameterCd="00060", startDate="2000-10-01", 
  endDate="2001-09-30")
NFYB <- renameNWISColumns(NFYB)
YB <- readNWISdv("05293000", parameterCd="00060", startDate="2000-10-01", 
  endDate="2001-09-30")
YB <- renameNWISColumns(YB)
@

\eject
\section{The Lognormal Model}

The objective of this example is to estimate the missing streamflow during water-year 2001 for the Yellow Bank River near Odessa, Minn. from the complete record at the upsteam site, North Fork Yellow Bank River near Odessa, Minn., based on only the water year 2001 data.

The first step is to merge the data by date, then build the MOVE.2 model. Because there is only a short distance between the gaging stations, a lag of 0 (the default) will be used in the model. The \texttt{merge} function is set up to create the two streamflow columns, Flow.NFYB and Flow.YB.

<<echo=TRUE>>=
# Merge the data
YBM <- merge(NFYB, YB, by="dateTime", all=TRUE, suffixes=c(".NFYB", ".YB"))
# Construct and print the model.
YBM.m2ln <- move.2(Flow.YB ~ Flow.NFYB, data=YBM, distribution="lognormal")
print(YBM.m2ln)
@

The statistics from the printed output indicate the that data are very highly correlated, 0.933 and the diagnostic plot, shown in figure 1, indicates a reasonably linear fit.

<<echo=TRUE>>=
# setSweave is a specialized function that sets up the graphics page for
# Sweave scripts. For interactive use, it should be removed and the
# default setting for set.up can be used.
setSweave("graph01", 6, 6)
plot(YBM.m2ln, which=2, set.up=FALSE)
# Required call to close PDF output graphics
graphics.off()
@
<<results=tex, echo=FALSE>>=
cat("\\includegraphics{graph01.pdf}\n")
cat("\\paragraph{}\n")
@

\textbf{Figure 1.} The diagnsotic plot showing the linearity of the fit.

The predicted values are computed using the \texttt{predict} function without specifying the \texttt{newdata} argument. The plot shows how well the concurrent data are predicted; it suggests that the concurrent values are underpredicted!

<<echo=TRUE>>=
# Predict all values
YBM$Pred.ln <- predict(YBM.m2ln)
setSweave("graph02", 6, 6)
AA.pl <- with(YBM, timePlot(dateTime, Pred.ln, yaxis.log=TRUE))
AA.pl <- with(YBM, addXY(dateTime, Flow.YB, 
  Plot=list(what="lines", color="green"), current=AA.pl))
graphics.off()
@
<<results=tex, echo=FALSE>>=
cat("\\includegraphics{graph02.pdf}\n")
cat("\\paragraph{}\n")
@

\textbf{Figure 2.} The predicted and concurrent values.

\eject
\section{The Box-Cox Model}

Moog and others (1999) suggest that power transforms other than log can be useful in streamflow record extension. The \texttt{optimBoxCox} function can be used to find good power transformations  to make data more multivariate normal. The output from \texttt{optimBoxCox} can be used as the value for the \texttt{distribution} argument. The steps in building a Box-Cox transformation model are shown in the R code below.

The \texttt{move.2} function uses the rounded lambda values (Rnd. Lambda) rather than the optimized values. The graph indicates a much better fit to the concurrent values than the lognormal model.

<<echo=TRUE>>=
# Construct and print the power transforms for multivariate normality
YBM.bc <- optimBoxCox(YBM[c("Flow.YB", "Flow.NFYB")])
print(YBM.bc)
# Construct and print the model.
YBM.m2bc <- move.2(Flow.YB ~ Flow.NFYB, data=YBM, distribution=YBM.bc)
print(YBM.m2bc)
# Predict all values
YBM$Pred.bc <- predict(YBM.m2bc)
setSweave("graph03", 6, 6)
AA.pl <- with(YBM, timePlot(dateTime, Pred.bc, yaxis.log=TRUE))
AA.pl <- with(YBM, addXY(dateTime, Flow.YB, 
  Plot=list(what="lines", color="green"), current=AA.pl))
graphics.off()
@
<<results=tex, echo=FALSE>>=
cat("\\includegraphics{graph03.pdf}\n")
cat("\\paragraph{}\n")
@

\textbf{Figure 3.} The predicted and concurrent values for the Box-Cox power transformation model.
@

\begin{thebibliography}{9}

\bibitem{Moog}
Moog, D.B., Whiting, P.J., and Thomas, R.B., 1999, Streamflow record extension using power transformations and applications to sediment transport: Water Resources Research, v. 35, p 243--254.

\end{thebibliography}

\end{document}
